Andrew MacNeille
Steve Petrides
Systems Programming
18 September 2016

There are two major methods in the implementation of the string tokenizer, one that extracts tokens from the input string and a method that appends the token in alphabetical order. 

Sorting Algorithm

- head, ptrA, ptrB are Node pointers

	if ptrA has another node after:
		if ptrA == ptrB == head:
			if n needs to go before head:
				n->next = head;
				head = n;
			else:
				ptr = ptrA->next;
		else:
			if n needs to go before ptrA:
				ptrB->next = n;
				n->next = ptrA;
			else:
				ptrA = ptrA->next;
				ptrB = ptrB->next;
		else:
		if n needs to go before ptrA:
			ptrB->next = n;
			n->next = ptrA;
		else:
			ptrA->next = n;



extractTokens(char * input, size_t inputSize)

-There are two parameters, a pointer to the beginning of the input string and the size of the     input string.

-The method utilizes two pointers to isolate each token, tokenStart and tokenEnd. tokenEnd traverses the character array and stops on the first character that is not a letter. Once tokenEnd stops the address of tokenEnd is subtracted with the address of tokenStart to obtain the size of the token. A piece of memory is then malloced to the size of the determined token. tokenStart next points to where tokenEnd is pointing to and the method subsequently looks for another token.

-The entire input in traversed in a while loop until the pointer reaches the null terminator.




 








